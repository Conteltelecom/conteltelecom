'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:4.0.30319.42000
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("AtestadoQualificacaoTecnica"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class AtestadoQualificacaoTecnica
    Inherits Global.System.Data.DataSet
    
    Private tableDataTableCNPJ_PS_JURIDICA As DataTableCNPJ_PS_JURIDICADataTable
    
    Private tableSF_SERVICOS_FATURA As SF_SERVICOS_FATURADataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("DataTableCNPJ_PS_JURIDICA")) Is Nothing) Then
                MyBase.Tables.Add(New DataTableCNPJ_PS_JURIDICADataTable(ds.Tables("DataTableCNPJ_PS_JURIDICA")))
            End If
            If (Not (ds.Tables("SF_SERVICOS_FATURA")) Is Nothing) Then
                MyBase.Tables.Add(New SF_SERVICOS_FATURADataTable(ds.Tables("SF_SERVICOS_FATURA")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DataTableCNPJ_PS_JURIDICA() As DataTableCNPJ_PS_JURIDICADataTable
        Get
            Return Me.tableDataTableCNPJ_PS_JURIDICA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SF_SERVICOS_FATURA() As SF_SERVICOS_FATURADataTable
        Get
            Return Me.tableSF_SERVICOS_FATURA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As AtestadoQualificacaoTecnica = CType(MyBase.Clone,AtestadoQualificacaoTecnica)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("DataTableCNPJ_PS_JURIDICA")) Is Nothing) Then
                MyBase.Tables.Add(New DataTableCNPJ_PS_JURIDICADataTable(ds.Tables("DataTableCNPJ_PS_JURIDICA")))
            End If
            If (Not (ds.Tables("SF_SERVICOS_FATURA")) Is Nothing) Then
                MyBase.Tables.Add(New SF_SERVICOS_FATURADataTable(ds.Tables("SF_SERVICOS_FATURA")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableDataTableCNPJ_PS_JURIDICA = CType(MyBase.Tables("DataTableCNPJ_PS_JURIDICA"),DataTableCNPJ_PS_JURIDICADataTable)
        If (initTable = true) Then
            If (Not (Me.tableDataTableCNPJ_PS_JURIDICA) Is Nothing) Then
                Me.tableDataTableCNPJ_PS_JURIDICA.InitVars
            End If
        End If
        Me.tableSF_SERVICOS_FATURA = CType(MyBase.Tables("SF_SERVICOS_FATURA"),SF_SERVICOS_FATURADataTable)
        If (initTable = true) Then
            If (Not (Me.tableSF_SERVICOS_FATURA) Is Nothing) Then
                Me.tableSF_SERVICOS_FATURA.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "AtestadoQualificacaoTecnica"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/AtestadoQualificacaoTecnica.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableDataTableCNPJ_PS_JURIDICA = New DataTableCNPJ_PS_JURIDICADataTable()
        MyBase.Tables.Add(Me.tableDataTableCNPJ_PS_JURIDICA)
        Me.tableSF_SERVICOS_FATURA = New SF_SERVICOS_FATURADataTable()
        MyBase.Tables.Add(Me.tableSF_SERVICOS_FATURA)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeDataTableCNPJ_PS_JURIDICA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSF_SERVICOS_FATURA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As AtestadoQualificacaoTecnica = New AtestadoQualificacaoTecnica()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub DataTableCNPJ_PS_JURIDICARowChangeEventHandler(ByVal sender As Object, ByVal e As DataTableCNPJ_PS_JURIDICARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SF_SERVICOS_FATURARowChangeEventHandler(ByVal sender As Object, ByVal e As SF_SERVICOS_FATURARowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DataTableCNPJ_PS_JURIDICADataTable
        Inherits Global.System.Data.TypedTableBase(Of DataTableCNPJ_PS_JURIDICARow)
        
        Private columnCNPJ_PS_JURIDICA As Global.System.Data.DataColumn
        
        Private columnrazaosocial_PS_JURIDICA As Global.System.Data.DataColumn
        
        Private columnendereco_PS_PESSOA As Global.System.Data.DataColumn
        
        Private columnnumEndereco_PS_PESSOA As Global.System.Data.DataColumn
        
        Private columnbairro_PS_PESSOA As Global.System.Data.DataColumn
        
        Private columndesc_PS_CIDADES As Global.System.Data.DataColumn
        
        Private columncod_PS_UF As Global.System.Data.DataColumn
        
        Private columnid_PS_EMPRESAS As Global.System.Data.DataColumn
        
        Private columnnumEndereco_PS_PESSOA_CONTEL As Global.System.Data.DataColumn
        
        Private columnbairro_PS_PESSOA_CONTEL As Global.System.Data.DataColumn
        
        Private columnendereco_PS_PESSOA_CONTEL As Global.System.Data.DataColumn
        
        Private columnrazaosocial_PS_JURIDICA_CONTEL As Global.System.Data.DataColumn
        
        Private columnCNPJ_PS_JURIDICA_CONTEL As Global.System.Data.DataColumn
        
        Private columncodMatriz_PS_CLIENTES As Global.System.Data.DataColumn
        
        Private columndesc_PS_CIDADES_CONTEL As Global.System.Data.DataColumn
        
        Private columncod_PS_UF_CONTEL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DataTableCNPJ_PS_JURIDICA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CNPJ_PS_JURIDICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNPJ_PS_JURIDICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property razaosocial_PS_JURIDICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrazaosocial_PS_JURIDICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property endereco_PS_PESSOAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnendereco_PS_PESSOA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property numEndereco_PS_PESSOAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumEndereco_PS_PESSOA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property bairro_PS_PESSOAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbairro_PS_PESSOA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property desc_PS_CIDADESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_PS_CIDADES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cod_PS_UFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_PS_UF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property id_PS_EMPRESASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_PS_EMPRESAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property numEndereco_PS_PESSOA_CONTELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumEndereco_PS_PESSOA_CONTEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property bairro_PS_PESSOA_CONTELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbairro_PS_PESSOA_CONTEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property endereco_PS_PESSOA_CONTELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnendereco_PS_PESSOA_CONTEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property razaosocial_PS_JURIDICA_CONTELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrazaosocial_PS_JURIDICA_CONTEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CNPJ_PS_JURIDICA_CONTELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNPJ_PS_JURIDICA_CONTEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property codMatriz_PS_CLIENTESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodMatriz_PS_CLIENTES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property desc_PS_CIDADES_CONTELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_PS_CIDADES_CONTEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cod_PS_UF_CONTELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_PS_UF_CONTEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DataTableCNPJ_PS_JURIDICARow
            Get
                Return CType(Me.Rows(index),DataTableCNPJ_PS_JURIDICARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DataTableCNPJ_PS_JURIDICARowChanging As DataTableCNPJ_PS_JURIDICARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DataTableCNPJ_PS_JURIDICARowChanged As DataTableCNPJ_PS_JURIDICARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DataTableCNPJ_PS_JURIDICARowDeleting As DataTableCNPJ_PS_JURIDICARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DataTableCNPJ_PS_JURIDICARowDeleted As DataTableCNPJ_PS_JURIDICARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddDataTableCNPJ_PS_JURIDICARow(ByVal row As DataTableCNPJ_PS_JURIDICARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddDataTableCNPJ_PS_JURIDICARow( _
                    ByVal CNPJ_PS_JURIDICA As String,  _
                    ByVal razaosocial_PS_JURIDICA As String,  _
                    ByVal endereco_PS_PESSOA As String,  _
                    ByVal numEndereco_PS_PESSOA As String,  _
                    ByVal bairro_PS_PESSOA As String,  _
                    ByVal desc_PS_CIDADES As String,  _
                    ByVal cod_PS_UF As String,  _
                    ByVal id_PS_EMPRESAS As Integer,  _
                    ByVal numEndereco_PS_PESSOA_CONTEL As String,  _
                    ByVal bairro_PS_PESSOA_CONTEL As String,  _
                    ByVal endereco_PS_PESSOA_CONTEL As String,  _
                    ByVal razaosocial_PS_JURIDICA_CONTEL As String,  _
                    ByVal CNPJ_PS_JURIDICA_CONTEL As String,  _
                    ByVal codMatriz_PS_CLIENTES As Integer,  _
                    ByVal desc_PS_CIDADES_CONTEL As String,  _
                    ByVal cod_PS_UF_CONTEL As String) As DataTableCNPJ_PS_JURIDICARow
            Dim rowDataTableCNPJ_PS_JURIDICARow As DataTableCNPJ_PS_JURIDICARow = CType(Me.NewRow,DataTableCNPJ_PS_JURIDICARow)
            Dim columnValuesArray() As Object = New Object() {CNPJ_PS_JURIDICA, razaosocial_PS_JURIDICA, endereco_PS_PESSOA, numEndereco_PS_PESSOA, bairro_PS_PESSOA, desc_PS_CIDADES, cod_PS_UF, id_PS_EMPRESAS, numEndereco_PS_PESSOA_CONTEL, bairro_PS_PESSOA_CONTEL, endereco_PS_PESSOA_CONTEL, razaosocial_PS_JURIDICA_CONTEL, CNPJ_PS_JURIDICA_CONTEL, codMatriz_PS_CLIENTES, desc_PS_CIDADES_CONTEL, cod_PS_UF_CONTEL}
            rowDataTableCNPJ_PS_JURIDICARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDataTableCNPJ_PS_JURIDICARow)
            Return rowDataTableCNPJ_PS_JURIDICARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DataTableCNPJ_PS_JURIDICADataTable = CType(MyBase.Clone,DataTableCNPJ_PS_JURIDICADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DataTableCNPJ_PS_JURIDICADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCNPJ_PS_JURIDICA = MyBase.Columns("CNPJ_PS_JURIDICA")
            Me.columnrazaosocial_PS_JURIDICA = MyBase.Columns("razaosocial_PS_JURIDICA")
            Me.columnendereco_PS_PESSOA = MyBase.Columns("endereco_PS_PESSOA")
            Me.columnnumEndereco_PS_PESSOA = MyBase.Columns("numEndereco_PS_PESSOA")
            Me.columnbairro_PS_PESSOA = MyBase.Columns("bairro_PS_PESSOA")
            Me.columndesc_PS_CIDADES = MyBase.Columns("desc_PS_CIDADES")
            Me.columncod_PS_UF = MyBase.Columns("cod_PS_UF")
            Me.columnid_PS_EMPRESAS = MyBase.Columns("id_PS_EMPRESAS")
            Me.columnnumEndereco_PS_PESSOA_CONTEL = MyBase.Columns("numEndereco_PS_PESSOA_CONTEL")
            Me.columnbairro_PS_PESSOA_CONTEL = MyBase.Columns("bairro_PS_PESSOA_CONTEL")
            Me.columnendereco_PS_PESSOA_CONTEL = MyBase.Columns("endereco_PS_PESSOA_CONTEL")
            Me.columnrazaosocial_PS_JURIDICA_CONTEL = MyBase.Columns("razaosocial_PS_JURIDICA_CONTEL")
            Me.columnCNPJ_PS_JURIDICA_CONTEL = MyBase.Columns("CNPJ_PS_JURIDICA_CONTEL")
            Me.columncodMatriz_PS_CLIENTES = MyBase.Columns("codMatriz_PS_CLIENTES")
            Me.columndesc_PS_CIDADES_CONTEL = MyBase.Columns("desc_PS_CIDADES_CONTEL")
            Me.columncod_PS_UF_CONTEL = MyBase.Columns("cod_PS_UF_CONTEL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCNPJ_PS_JURIDICA = New Global.System.Data.DataColumn("CNPJ_PS_JURIDICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNPJ_PS_JURIDICA)
            Me.columnrazaosocial_PS_JURIDICA = New Global.System.Data.DataColumn("razaosocial_PS_JURIDICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrazaosocial_PS_JURIDICA)
            Me.columnendereco_PS_PESSOA = New Global.System.Data.DataColumn("endereco_PS_PESSOA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnendereco_PS_PESSOA)
            Me.columnnumEndereco_PS_PESSOA = New Global.System.Data.DataColumn("numEndereco_PS_PESSOA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumEndereco_PS_PESSOA)
            Me.columnbairro_PS_PESSOA = New Global.System.Data.DataColumn("bairro_PS_PESSOA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbairro_PS_PESSOA)
            Me.columndesc_PS_CIDADES = New Global.System.Data.DataColumn("desc_PS_CIDADES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_PS_CIDADES)
            Me.columncod_PS_UF = New Global.System.Data.DataColumn("cod_PS_UF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_PS_UF)
            Me.columnid_PS_EMPRESAS = New Global.System.Data.DataColumn("id_PS_EMPRESAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_PS_EMPRESAS)
            Me.columnnumEndereco_PS_PESSOA_CONTEL = New Global.System.Data.DataColumn("numEndereco_PS_PESSOA_CONTEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumEndereco_PS_PESSOA_CONTEL)
            Me.columnbairro_PS_PESSOA_CONTEL = New Global.System.Data.DataColumn("bairro_PS_PESSOA_CONTEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbairro_PS_PESSOA_CONTEL)
            Me.columnendereco_PS_PESSOA_CONTEL = New Global.System.Data.DataColumn("endereco_PS_PESSOA_CONTEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnendereco_PS_PESSOA_CONTEL)
            Me.columnrazaosocial_PS_JURIDICA_CONTEL = New Global.System.Data.DataColumn("razaosocial_PS_JURIDICA_CONTEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrazaosocial_PS_JURIDICA_CONTEL)
            Me.columnCNPJ_PS_JURIDICA_CONTEL = New Global.System.Data.DataColumn("CNPJ_PS_JURIDICA_CONTEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNPJ_PS_JURIDICA_CONTEL)
            Me.columncodMatriz_PS_CLIENTES = New Global.System.Data.DataColumn("codMatriz_PS_CLIENTES", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodMatriz_PS_CLIENTES)
            Me.columndesc_PS_CIDADES_CONTEL = New Global.System.Data.DataColumn("desc_PS_CIDADES_CONTEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_PS_CIDADES_CONTEL)
            Me.columncod_PS_UF_CONTEL = New Global.System.Data.DataColumn("cod_PS_UF_CONTEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_PS_UF_CONTEL)
            Me.columnCNPJ_PS_JURIDICA.AllowDBNull = false
            Me.columnCNPJ_PS_JURIDICA.MaxLength = 14
            Me.columnrazaosocial_PS_JURIDICA.MaxLength = 250
            Me.columnendereco_PS_PESSOA.MaxLength = 200
            Me.columnnumEndereco_PS_PESSOA.MaxLength = 10
            Me.columnbairro_PS_PESSOA.MaxLength = 200
            Me.columndesc_PS_CIDADES.AllowDBNull = false
            Me.columndesc_PS_CIDADES.MaxLength = 150
            Me.columncod_PS_UF.AllowDBNull = false
            Me.columncod_PS_UF.MaxLength = 10
            Me.columnid_PS_EMPRESAS.AllowDBNull = false
            Me.columnnumEndereco_PS_PESSOA_CONTEL.MaxLength = 10
            Me.columnbairro_PS_PESSOA_CONTEL.MaxLength = 200
            Me.columnendereco_PS_PESSOA_CONTEL.MaxLength = 200
            Me.columnrazaosocial_PS_JURIDICA_CONTEL.MaxLength = 250
            Me.columnCNPJ_PS_JURIDICA_CONTEL.AllowDBNull = false
            Me.columnCNPJ_PS_JURIDICA_CONTEL.MaxLength = 14
            Me.columncodMatriz_PS_CLIENTES.AllowDBNull = false
            Me.columndesc_PS_CIDADES_CONTEL.AllowDBNull = false
            Me.columndesc_PS_CIDADES_CONTEL.MaxLength = 150
            Me.columncod_PS_UF_CONTEL.AllowDBNull = false
            Me.columncod_PS_UF_CONTEL.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewDataTableCNPJ_PS_JURIDICARow() As DataTableCNPJ_PS_JURIDICARow
            Return CType(Me.NewRow,DataTableCNPJ_PS_JURIDICARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DataTableCNPJ_PS_JURIDICARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DataTableCNPJ_PS_JURIDICARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DataTableCNPJ_PS_JURIDICARowChangedEvent) Is Nothing) Then
                RaiseEvent DataTableCNPJ_PS_JURIDICARowChanged(Me, New DataTableCNPJ_PS_JURIDICARowChangeEvent(CType(e.Row,DataTableCNPJ_PS_JURIDICARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DataTableCNPJ_PS_JURIDICARowChangingEvent) Is Nothing) Then
                RaiseEvent DataTableCNPJ_PS_JURIDICARowChanging(Me, New DataTableCNPJ_PS_JURIDICARowChangeEvent(CType(e.Row,DataTableCNPJ_PS_JURIDICARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DataTableCNPJ_PS_JURIDICARowDeletedEvent) Is Nothing) Then
                RaiseEvent DataTableCNPJ_PS_JURIDICARowDeleted(Me, New DataTableCNPJ_PS_JURIDICARowChangeEvent(CType(e.Row,DataTableCNPJ_PS_JURIDICARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DataTableCNPJ_PS_JURIDICARowDeletingEvent) Is Nothing) Then
                RaiseEvent DataTableCNPJ_PS_JURIDICARowDeleting(Me, New DataTableCNPJ_PS_JURIDICARowChangeEvent(CType(e.Row,DataTableCNPJ_PS_JURIDICARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveDataTableCNPJ_PS_JURIDICARow(ByVal row As DataTableCNPJ_PS_JURIDICARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As AtestadoQualificacaoTecnica = New AtestadoQualificacaoTecnica()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DataTableCNPJ_PS_JURIDICADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SF_SERVICOS_FATURADataTable
        Inherits Global.System.Data.TypedTableBase(Of SF_SERVICOS_FATURARow)
        
        Private columnvlReducaoSF_SERVICOS_FATURA As Global.System.Data.DataColumn
        
        Private columnforaAnalise_LI_LINHAS As Global.System.Data.DataColumn
        
        Private columnvlInicial_id_LI_TIPOS As Global.System.Data.DataColumn
        
        Private columnmesAnoRefereincia_SF_SERVICOS_FATURA As Global.System.Data.DataColumn
        
        Private columncodMatriz_PS_CLIENTES As Global.System.Data.DataColumn
        
        Private columnvltotalLinha_SF_SERVICOS_FATURA As Global.System.Data.DataColumn
        
        Private columnperIncial_LI_LINHAS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SF_SERVICOS_FATURA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vlReducaoSF_SERVICOS_FATURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvlReducaoSF_SERVICOS_FATURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property foraAnalise_LI_LINHASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnforaAnalise_LI_LINHAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vlInicial_id_LI_TIPOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvlInicial_id_LI_TIPOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mesAnoRefereincia_SF_SERVICOS_FATURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmesAnoRefereincia_SF_SERVICOS_FATURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property codMatriz_PS_CLIENTESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodMatriz_PS_CLIENTES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vltotalLinha_SF_SERVICOS_FATURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvltotalLinha_SF_SERVICOS_FATURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property perIncial_LI_LINHASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnperIncial_LI_LINHAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SF_SERVICOS_FATURARow
            Get
                Return CType(Me.Rows(index),SF_SERVICOS_FATURARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SF_SERVICOS_FATURARowChanging As SF_SERVICOS_FATURARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SF_SERVICOS_FATURARowChanged As SF_SERVICOS_FATURARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SF_SERVICOS_FATURARowDeleting As SF_SERVICOS_FATURARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SF_SERVICOS_FATURARowDeleted As SF_SERVICOS_FATURARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSF_SERVICOS_FATURARow(ByVal row As SF_SERVICOS_FATURARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSF_SERVICOS_FATURARow(ByVal vlReducaoSF_SERVICOS_FATURA As Decimal, ByVal foraAnalise_LI_LINHAS As Byte, ByVal vlInicial_id_LI_TIPOS As Decimal, ByVal mesAnoRefereincia_SF_SERVICOS_FATURA As String, ByVal codMatriz_PS_CLIENTES As Integer, ByVal vltotalLinha_SF_SERVICOS_FATURA As Decimal, ByVal perIncial_LI_LINHAS As String) As SF_SERVICOS_FATURARow
            Dim rowSF_SERVICOS_FATURARow As SF_SERVICOS_FATURARow = CType(Me.NewRow,SF_SERVICOS_FATURARow)
            Dim columnValuesArray() As Object = New Object() {vlReducaoSF_SERVICOS_FATURA, foraAnalise_LI_LINHAS, vlInicial_id_LI_TIPOS, mesAnoRefereincia_SF_SERVICOS_FATURA, codMatriz_PS_CLIENTES, vltotalLinha_SF_SERVICOS_FATURA, perIncial_LI_LINHAS}
            rowSF_SERVICOS_FATURARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSF_SERVICOS_FATURARow)
            Return rowSF_SERVICOS_FATURARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SF_SERVICOS_FATURADataTable = CType(MyBase.Clone,SF_SERVICOS_FATURADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SF_SERVICOS_FATURADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnvlReducaoSF_SERVICOS_FATURA = MyBase.Columns("vlReducaoSF_SERVICOS_FATURA")
            Me.columnforaAnalise_LI_LINHAS = MyBase.Columns("foraAnalise_LI_LINHAS")
            Me.columnvlInicial_id_LI_TIPOS = MyBase.Columns("vlInicial_id_LI_TIPOS")
            Me.columnmesAnoRefereincia_SF_SERVICOS_FATURA = MyBase.Columns("mesAnoRefereincia_SF_SERVICOS_FATURA")
            Me.columncodMatriz_PS_CLIENTES = MyBase.Columns("codMatriz_PS_CLIENTES")
            Me.columnvltotalLinha_SF_SERVICOS_FATURA = MyBase.Columns("vltotalLinha_SF_SERVICOS_FATURA")
            Me.columnperIncial_LI_LINHAS = MyBase.Columns("perIncial_LI_LINHAS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnvlReducaoSF_SERVICOS_FATURA = New Global.System.Data.DataColumn("vlReducaoSF_SERVICOS_FATURA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvlReducaoSF_SERVICOS_FATURA)
            Me.columnforaAnalise_LI_LINHAS = New Global.System.Data.DataColumn("foraAnalise_LI_LINHAS", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnforaAnalise_LI_LINHAS)
            Me.columnvlInicial_id_LI_TIPOS = New Global.System.Data.DataColumn("vlInicial_id_LI_TIPOS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvlInicial_id_LI_TIPOS)
            Me.columnmesAnoRefereincia_SF_SERVICOS_FATURA = New Global.System.Data.DataColumn("mesAnoRefereincia_SF_SERVICOS_FATURA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmesAnoRefereincia_SF_SERVICOS_FATURA)
            Me.columncodMatriz_PS_CLIENTES = New Global.System.Data.DataColumn("codMatriz_PS_CLIENTES", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodMatriz_PS_CLIENTES)
            Me.columnvltotalLinha_SF_SERVICOS_FATURA = New Global.System.Data.DataColumn("vltotalLinha_SF_SERVICOS_FATURA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvltotalLinha_SF_SERVICOS_FATURA)
            Me.columnperIncial_LI_LINHAS = New Global.System.Data.DataColumn("perIncial_LI_LINHAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnperIncial_LI_LINHAS)
            Me.columnvlReducaoSF_SERVICOS_FATURA.ReadOnly = true
            Me.columnvlInicial_id_LI_TIPOS.ReadOnly = true
            Me.columnmesAnoRefereincia_SF_SERVICOS_FATURA.AllowDBNull = false
            Me.columnmesAnoRefereincia_SF_SERVICOS_FATURA.MaxLength = 50
            Me.columnvltotalLinha_SF_SERVICOS_FATURA.ReadOnly = true
            Me.columnperIncial_LI_LINHAS.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSF_SERVICOS_FATURARow() As SF_SERVICOS_FATURARow
            Return CType(Me.NewRow,SF_SERVICOS_FATURARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SF_SERVICOS_FATURARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SF_SERVICOS_FATURARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SF_SERVICOS_FATURARowChangedEvent) Is Nothing) Then
                RaiseEvent SF_SERVICOS_FATURARowChanged(Me, New SF_SERVICOS_FATURARowChangeEvent(CType(e.Row,SF_SERVICOS_FATURARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SF_SERVICOS_FATURARowChangingEvent) Is Nothing) Then
                RaiseEvent SF_SERVICOS_FATURARowChanging(Me, New SF_SERVICOS_FATURARowChangeEvent(CType(e.Row,SF_SERVICOS_FATURARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SF_SERVICOS_FATURARowDeletedEvent) Is Nothing) Then
                RaiseEvent SF_SERVICOS_FATURARowDeleted(Me, New SF_SERVICOS_FATURARowChangeEvent(CType(e.Row,SF_SERVICOS_FATURARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SF_SERVICOS_FATURARowDeletingEvent) Is Nothing) Then
                RaiseEvent SF_SERVICOS_FATURARowDeleting(Me, New SF_SERVICOS_FATURARowChangeEvent(CType(e.Row,SF_SERVICOS_FATURARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSF_SERVICOS_FATURARow(ByVal row As SF_SERVICOS_FATURARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As AtestadoQualificacaoTecnica = New AtestadoQualificacaoTecnica()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SF_SERVICOS_FATURADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DataTableCNPJ_PS_JURIDICARow
        Inherits Global.System.Data.DataRow
        
        Private tableDataTableCNPJ_PS_JURIDICA As DataTableCNPJ_PS_JURIDICADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDataTableCNPJ_PS_JURIDICA = CType(Me.Table,DataTableCNPJ_PS_JURIDICADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CNPJ_PS_JURIDICA() As String
            Get
                Return CType(Me(Me.tableDataTableCNPJ_PS_JURIDICA.CNPJ_PS_JURIDICAColumn),String)
            End Get
            Set
                Me(Me.tableDataTableCNPJ_PS_JURIDICA.CNPJ_PS_JURIDICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property razaosocial_PS_JURIDICA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTableCNPJ_PS_JURIDICA.razaosocial_PS_JURIDICAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'razaosocial_PS_JURIDICA' na tabela 'DataTableCNPJ_PS_JURIDICA'"& _ 
                            " é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTableCNPJ_PS_JURIDICA.razaosocial_PS_JURIDICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property endereco_PS_PESSOA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTableCNPJ_PS_JURIDICA.endereco_PS_PESSOAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'endereco_PS_PESSOA' na tabela 'DataTableCNPJ_PS_JURIDICA' é DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTableCNPJ_PS_JURIDICA.endereco_PS_PESSOAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property numEndereco_PS_PESSOA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTableCNPJ_PS_JURIDICA.numEndereco_PS_PESSOAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'numEndereco_PS_PESSOA' na tabela 'DataTableCNPJ_PS_JURIDICA' é"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTableCNPJ_PS_JURIDICA.numEndereco_PS_PESSOAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property bairro_PS_PESSOA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTableCNPJ_PS_JURIDICA.bairro_PS_PESSOAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'bairro_PS_PESSOA' na tabela 'DataTableCNPJ_PS_JURIDICA' é DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTableCNPJ_PS_JURIDICA.bairro_PS_PESSOAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property desc_PS_CIDADES() As String
            Get
                Return CType(Me(Me.tableDataTableCNPJ_PS_JURIDICA.desc_PS_CIDADESColumn),String)
            End Get
            Set
                Me(Me.tableDataTableCNPJ_PS_JURIDICA.desc_PS_CIDADESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property cod_PS_UF() As String
            Get
                Return CType(Me(Me.tableDataTableCNPJ_PS_JURIDICA.cod_PS_UFColumn),String)
            End Get
            Set
                Me(Me.tableDataTableCNPJ_PS_JURIDICA.cod_PS_UFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property id_PS_EMPRESAS() As Integer
            Get
                Return CType(Me(Me.tableDataTableCNPJ_PS_JURIDICA.id_PS_EMPRESASColumn),Integer)
            End Get
            Set
                Me(Me.tableDataTableCNPJ_PS_JURIDICA.id_PS_EMPRESASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property numEndereco_PS_PESSOA_CONTEL() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTableCNPJ_PS_JURIDICA.numEndereco_PS_PESSOA_CONTELColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'numEndereco_PS_PESSOA_CONTEL' na tabela 'DataTableCNPJ_PS_JURI"& _ 
                            "DICA' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTableCNPJ_PS_JURIDICA.numEndereco_PS_PESSOA_CONTELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property bairro_PS_PESSOA_CONTEL() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTableCNPJ_PS_JURIDICA.bairro_PS_PESSOA_CONTELColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'bairro_PS_PESSOA_CONTEL' na tabela 'DataTableCNPJ_PS_JURIDICA'"& _ 
                            " é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTableCNPJ_PS_JURIDICA.bairro_PS_PESSOA_CONTELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property endereco_PS_PESSOA_CONTEL() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTableCNPJ_PS_JURIDICA.endereco_PS_PESSOA_CONTELColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'endereco_PS_PESSOA_CONTEL' na tabela 'DataTableCNPJ_PS_JURIDIC"& _ 
                            "A' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTableCNPJ_PS_JURIDICA.endereco_PS_PESSOA_CONTELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property razaosocial_PS_JURIDICA_CONTEL() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTableCNPJ_PS_JURIDICA.razaosocial_PS_JURIDICA_CONTELColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'razaosocial_PS_JURIDICA_CONTEL' na tabela 'DataTableCNPJ_PS_JU"& _ 
                            "RIDICA' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTableCNPJ_PS_JURIDICA.razaosocial_PS_JURIDICA_CONTELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CNPJ_PS_JURIDICA_CONTEL() As String
            Get
                Return CType(Me(Me.tableDataTableCNPJ_PS_JURIDICA.CNPJ_PS_JURIDICA_CONTELColumn),String)
            End Get
            Set
                Me(Me.tableDataTableCNPJ_PS_JURIDICA.CNPJ_PS_JURIDICA_CONTELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property codMatriz_PS_CLIENTES() As Integer
            Get
                Return CType(Me(Me.tableDataTableCNPJ_PS_JURIDICA.codMatriz_PS_CLIENTESColumn),Integer)
            End Get
            Set
                Me(Me.tableDataTableCNPJ_PS_JURIDICA.codMatriz_PS_CLIENTESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property desc_PS_CIDADES_CONTEL() As String
            Get
                Return CType(Me(Me.tableDataTableCNPJ_PS_JURIDICA.desc_PS_CIDADES_CONTELColumn),String)
            End Get
            Set
                Me(Me.tableDataTableCNPJ_PS_JURIDICA.desc_PS_CIDADES_CONTELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property cod_PS_UF_CONTEL() As String
            Get
                Return CType(Me(Me.tableDataTableCNPJ_PS_JURIDICA.cod_PS_UF_CONTELColumn),String)
            End Get
            Set
                Me(Me.tableDataTableCNPJ_PS_JURIDICA.cod_PS_UF_CONTELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Israzaosocial_PS_JURIDICANull() As Boolean
            Return Me.IsNull(Me.tableDataTableCNPJ_PS_JURIDICA.razaosocial_PS_JURIDICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setrazaosocial_PS_JURIDICANull()
            Me(Me.tableDataTableCNPJ_PS_JURIDICA.razaosocial_PS_JURIDICAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isendereco_PS_PESSOANull() As Boolean
            Return Me.IsNull(Me.tableDataTableCNPJ_PS_JURIDICA.endereco_PS_PESSOAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setendereco_PS_PESSOANull()
            Me(Me.tableDataTableCNPJ_PS_JURIDICA.endereco_PS_PESSOAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnumEndereco_PS_PESSOANull() As Boolean
            Return Me.IsNull(Me.tableDataTableCNPJ_PS_JURIDICA.numEndereco_PS_PESSOAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnumEndereco_PS_PESSOANull()
            Me(Me.tableDataTableCNPJ_PS_JURIDICA.numEndereco_PS_PESSOAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isbairro_PS_PESSOANull() As Boolean
            Return Me.IsNull(Me.tableDataTableCNPJ_PS_JURIDICA.bairro_PS_PESSOAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setbairro_PS_PESSOANull()
            Me(Me.tableDataTableCNPJ_PS_JURIDICA.bairro_PS_PESSOAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnumEndereco_PS_PESSOA_CONTELNull() As Boolean
            Return Me.IsNull(Me.tableDataTableCNPJ_PS_JURIDICA.numEndereco_PS_PESSOA_CONTELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnumEndereco_PS_PESSOA_CONTELNull()
            Me(Me.tableDataTableCNPJ_PS_JURIDICA.numEndereco_PS_PESSOA_CONTELColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isbairro_PS_PESSOA_CONTELNull() As Boolean
            Return Me.IsNull(Me.tableDataTableCNPJ_PS_JURIDICA.bairro_PS_PESSOA_CONTELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setbairro_PS_PESSOA_CONTELNull()
            Me(Me.tableDataTableCNPJ_PS_JURIDICA.bairro_PS_PESSOA_CONTELColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isendereco_PS_PESSOA_CONTELNull() As Boolean
            Return Me.IsNull(Me.tableDataTableCNPJ_PS_JURIDICA.endereco_PS_PESSOA_CONTELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setendereco_PS_PESSOA_CONTELNull()
            Me(Me.tableDataTableCNPJ_PS_JURIDICA.endereco_PS_PESSOA_CONTELColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Israzaosocial_PS_JURIDICA_CONTELNull() As Boolean
            Return Me.IsNull(Me.tableDataTableCNPJ_PS_JURIDICA.razaosocial_PS_JURIDICA_CONTELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setrazaosocial_PS_JURIDICA_CONTELNull()
            Me(Me.tableDataTableCNPJ_PS_JURIDICA.razaosocial_PS_JURIDICA_CONTELColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SF_SERVICOS_FATURARow
        Inherits Global.System.Data.DataRow
        
        Private tableSF_SERVICOS_FATURA As SF_SERVICOS_FATURADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSF_SERVICOS_FATURA = CType(Me.Table,SF_SERVICOS_FATURADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vlReducaoSF_SERVICOS_FATURA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSF_SERVICOS_FATURA.vlReducaoSF_SERVICOS_FATURAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'vlReducaoSF_SERVICOS_FATURA' na tabela 'SF_SERVICOS_FATURA' é "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSF_SERVICOS_FATURA.vlReducaoSF_SERVICOS_FATURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property foraAnalise_LI_LINHAS() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableSF_SERVICOS_FATURA.foraAnalise_LI_LINHASColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'foraAnalise_LI_LINHAS' na tabela 'SF_SERVICOS_FATURA' é DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSF_SERVICOS_FATURA.foraAnalise_LI_LINHASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vlInicial_id_LI_TIPOS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSF_SERVICOS_FATURA.vlInicial_id_LI_TIPOSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'vlInicial_id_LI_TIPOS' na tabela 'SF_SERVICOS_FATURA' é DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSF_SERVICOS_FATURA.vlInicial_id_LI_TIPOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mesAnoRefereincia_SF_SERVICOS_FATURA() As String
            Get
                Return CType(Me(Me.tableSF_SERVICOS_FATURA.mesAnoRefereincia_SF_SERVICOS_FATURAColumn),String)
            End Get
            Set
                Me(Me.tableSF_SERVICOS_FATURA.mesAnoRefereincia_SF_SERVICOS_FATURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property codMatriz_PS_CLIENTES() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSF_SERVICOS_FATURA.codMatriz_PS_CLIENTESColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'codMatriz_PS_CLIENTES' na tabela 'SF_SERVICOS_FATURA' é DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSF_SERVICOS_FATURA.codMatriz_PS_CLIENTESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vltotalLinha_SF_SERVICOS_FATURA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSF_SERVICOS_FATURA.vltotalLinha_SF_SERVICOS_FATURAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'vltotalLinha_SF_SERVICOS_FATURA' na tabela 'SF_SERVICOS_FATURA"& _ 
                            "' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSF_SERVICOS_FATURA.vltotalLinha_SF_SERVICOS_FATURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property perIncial_LI_LINHAS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSF_SERVICOS_FATURA.perIncial_LI_LINHASColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'perIncial_LI_LINHAS' na tabela 'SF_SERVICOS_FATURA' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSF_SERVICOS_FATURA.perIncial_LI_LINHASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvlReducaoSF_SERVICOS_FATURANull() As Boolean
            Return Me.IsNull(Me.tableSF_SERVICOS_FATURA.vlReducaoSF_SERVICOS_FATURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvlReducaoSF_SERVICOS_FATURANull()
            Me(Me.tableSF_SERVICOS_FATURA.vlReducaoSF_SERVICOS_FATURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsforaAnalise_LI_LINHASNull() As Boolean
            Return Me.IsNull(Me.tableSF_SERVICOS_FATURA.foraAnalise_LI_LINHASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetforaAnalise_LI_LINHASNull()
            Me(Me.tableSF_SERVICOS_FATURA.foraAnalise_LI_LINHASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvlInicial_id_LI_TIPOSNull() As Boolean
            Return Me.IsNull(Me.tableSF_SERVICOS_FATURA.vlInicial_id_LI_TIPOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvlInicial_id_LI_TIPOSNull()
            Me(Me.tableSF_SERVICOS_FATURA.vlInicial_id_LI_TIPOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscodMatriz_PS_CLIENTESNull() As Boolean
            Return Me.IsNull(Me.tableSF_SERVICOS_FATURA.codMatriz_PS_CLIENTESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcodMatriz_PS_CLIENTESNull()
            Me(Me.tableSF_SERVICOS_FATURA.codMatriz_PS_CLIENTESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvltotalLinha_SF_SERVICOS_FATURANull() As Boolean
            Return Me.IsNull(Me.tableSF_SERVICOS_FATURA.vltotalLinha_SF_SERVICOS_FATURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvltotalLinha_SF_SERVICOS_FATURANull()
            Me(Me.tableSF_SERVICOS_FATURA.vltotalLinha_SF_SERVICOS_FATURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsperIncial_LI_LINHASNull() As Boolean
            Return Me.IsNull(Me.tableSF_SERVICOS_FATURA.perIncial_LI_LINHASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetperIncial_LI_LINHASNull()
            Me(Me.tableSF_SERVICOS_FATURA.perIncial_LI_LINHASColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class DataTableCNPJ_PS_JURIDICARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DataTableCNPJ_PS_JURIDICARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As DataTableCNPJ_PS_JURIDICARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As DataTableCNPJ_PS_JURIDICARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SF_SERVICOS_FATURARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SF_SERVICOS_FATURARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SF_SERVICOS_FATURARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SF_SERVICOS_FATURARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace AtestadoQualificacaoTecnicaTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DataTableCNPJ_PS_JURIDICATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DataTableCNPJ_PS_JURIDICA"
            tableMapping.ColumnMappings.Add("CNPJ_PS_JURIDICA", "CNPJ_PS_JURIDICA")
            tableMapping.ColumnMappings.Add("razaosocial_PS_JURIDICA", "razaosocial_PS_JURIDICA")
            tableMapping.ColumnMappings.Add("endereco_PS_PESSOA", "endereco_PS_PESSOA")
            tableMapping.ColumnMappings.Add("numEndereco_PS_PESSOA", "numEndereco_PS_PESSOA")
            tableMapping.ColumnMappings.Add("bairro_PS_PESSOA", "bairro_PS_PESSOA")
            tableMapping.ColumnMappings.Add("desc_PS_CIDADES", "desc_PS_CIDADES")
            tableMapping.ColumnMappings.Add("cod_PS_UF", "cod_PS_UF")
            tableMapping.ColumnMappings.Add("id_PS_EMPRESAS", "id_PS_EMPRESAS")
            tableMapping.ColumnMappings.Add("numEndereco_PS_PESSOA_CONTEL", "numEndereco_PS_PESSOA_CONTEL")
            tableMapping.ColumnMappings.Add("bairro_PS_PESSOA_CONTEL", "bairro_PS_PESSOA_CONTEL")
            tableMapping.ColumnMappings.Add("endereco_PS_PESSOA_CONTEL", "endereco_PS_PESSOA_CONTEL")
            tableMapping.ColumnMappings.Add("razaosocial_PS_JURIDICA_CONTEL", "razaosocial_PS_JURIDICA_CONTEL")
            tableMapping.ColumnMappings.Add("CNPJ_PS_JURIDICA_CONTEL", "CNPJ_PS_JURIDICA_CONTEL")
            tableMapping.ColumnMappings.Add("codMatriz_PS_CLIENTES", "codMatriz_PS_CLIENTES")
            tableMapping.ColumnMappings.Add("desc_PS_CIDADES_CONTEL", "desc_PS_CIDADES_CONTEL")
            tableMapping.ColumnMappings.Add("cod_PS_UF_CONTEL", "cod_PS_UF_CONTEL")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("conteltelecomConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        PS_JURIDICA.CNPJ_PS_JURIDICA AS CNPJ_PS_JURIDICA, PS_JURIDICA.razao"& _ 
                "social_PS_JURIDICA, PS_PESSOA.endereco_PS_PESSOA, PS_PESSOA.numEndereco_PS_PESSO"& _ 
                "A, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PS_PESSOA.bairro_PS_PESSOA, PS_CIDADES.desc_PS_CID"& _ 
                "ADES, PS_CIDADES.cod_PS_UF, PS_CLIENTES.id_PS_EMPRESAS, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   PS_PESSOA_CONTEL.numEndereco_PS_PESSOA AS numEndereco_PS_PESSOA_CONTEL, PS_PE"& _ 
                "SSOA_CONTEL.bairro_PS_PESSOA AS bairro_PS_PESSOA_CONTEL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    PS_PESSOA_CONTEL.endereco_PS_PESSOA AS endereco_PS_PESSOA_CONTEL, PS_JURIDIC"& _ 
                "A_CONTEL.razaosocial_PS_JURIDICA AS razaosocial_PS_JURIDICA_CONTEL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "               PS_JURIDICA_CONTEL.CNPJ_PS_JURIDICA AS CNPJ_PS_JURIDICA_CONTEL, P"& _ 
                "S_CLIENTES.codMatriz_PS_CLIENTES, PS_CIDADES_CONTEL.desc_PS_CIDADES AS desc_PS_C"& _ 
                "IDADES_CONTEL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PS_CIDADES_CONTEL.cod_PS_UF AS cod_PS_"& _ 
                "UF_CONTEL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            PS_CLIENTES INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PS_J"& _ 
                "URIDICA ON PS_CLIENTES.id_PS_JURIDICA = PS_JURIDICA.id_PS_JURIDICA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                        PS_PESSOA ON PS_JURIDICA.id_PS_PESSOA = PS_PESSOA.id_PS_"& _ 
                "PESSOA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PS_CIDADES ON PS_PESSOA.id_PS_CIDADE"& _ 
                "S = PS_CIDADES.id_PS_CIDADES INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PS_PESSOA AS P"& _ 
                "S_PESSOA_CONTEL ON PS_CLIENTES.id_PS_EMPRESAS = PS_PESSOA_CONTEL.id_PS_PESSOA IN"& _ 
                "NER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PS_CLIENTES AS PS_CLIENTES_CONTEL ON PS_PESSO"& _ 
                "A_CONTEL.id_PS_PESSOA = PS_CLIENTES_CONTEL.id_PS_PESSOA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "             PS_JURIDICA AS PS_JURIDICA_CONTEL ON PS_PESSOA_CONTEL.id_PS_PESSOA "& _ 
                "= PS_JURIDICA_CONTEL.id_PS_PESSOA AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PS_CLIENTES_CON"& _ 
                "TEL.id_PS_JURIDICA = PS_JURIDICA_CONTEL.id_PS_JURIDICA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            PS_CIDADES AS PS_CIDADES_CONTEL ON PS_PESSOA_CONTEL.id_PS_CIDADES = "& _ 
                "PS_CIDADES_CONTEL.id_PS_CIDADES"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PS_CLIENTES.codMatriz_PS_CLIENTES"& _ 
                " = @codMatriz_PS_CLIENTES) AND (PS_PESSOA.id_PS_PESSOA = @codMatriz_PS_CLIENTES)"& _ 
                ""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codMatriz_PS_CLIENTES", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "codMatriz_PS_CLIENTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As AtestadoQualificacaoTecnica.DataTableCNPJ_PS_JURIDICADataTable, ByVal codMatriz_PS_CLIENTES As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(codMatriz_PS_CLIENTES,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal codMatriz_PS_CLIENTES As Integer) As AtestadoQualificacaoTecnica.DataTableCNPJ_PS_JURIDICADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(codMatriz_PS_CLIENTES,Integer)
            Dim dataTable As AtestadoQualificacaoTecnica.DataTableCNPJ_PS_JURIDICADataTable = New AtestadoQualificacaoTecnica.DataTableCNPJ_PS_JURIDICADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SF_SERVICOS_FATURATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SF_SERVICOS_FATURA"
            tableMapping.ColumnMappings.Add("vlReducaoSF_SERVICOS_FATURA", "vlReducaoSF_SERVICOS_FATURA")
            tableMapping.ColumnMappings.Add("foraAnalise_LI_LINHAS", "foraAnalise_LI_LINHAS")
            tableMapping.ColumnMappings.Add("vlInicial_id_LI_TIPOS", "vlInicial_id_LI_TIPOS")
            tableMapping.ColumnMappings.Add("mesAnoRefereincia_SF_SERVICOS_FATURA", "mesAnoRefereincia_SF_SERVICOS_FATURA")
            tableMapping.ColumnMappings.Add("codMatriz_PS_CLIENTES", "codMatriz_PS_CLIENTES")
            tableMapping.ColumnMappings.Add("vltotalLinha_SF_SERVICOS_FATURA", "vltotalLinha_SF_SERVICOS_FATURA")
            tableMapping.ColumnMappings.Add("perIncial_LI_LINHAS", "perIncial_LI_LINHAS")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("conteltelecomConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SUM(vlReducaoSF_SERVICOS_FATURA) AS vlReducaoSF_SERVICOS_FATURA, fo"& _ 
                "raAnalise_LI_LINHAS, SUM(vlInicial_id_LI_TIPOS) AS vlInicial_id_LI_TIPOS, mesAno"& _ 
                "Refereincia_SF_SERVICOS_FATURA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         codMatriz_PS_CLIENTES"& _ 
                ", SUM(vltotalLinha_SF_SERVICOS_FATURA) AS vltotalLinha_SF_SERVICOS_FATURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                         (SELECT        TOP (1) MIN(perIncial_LI_LINHAS) AS perI"& _ 
                "ncial_LI_LINHAS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            LI_LINHAS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                          WHERE        (foraAnalise_LI_LINHAS = 0) AND (id_PS_CL"& _ 
                "IENTES = @codMatriz_PS_CLIENTES)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               GROUP BY perInc"& _ 
                "ial_LI_LINHAS) AS perIncial_LI_LINHAS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            SF_SERVICOS_FATURA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE"& _ 
                "        (foraAnalise_LI_LINHAS = 0) AND (codMatriz_PS_CLIENTES = @codMatriz_PS_C"& _ 
                "LIENTES)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY foraAnalise_LI_LINHAS, mesAnoRefereincia_SF_SERVICOS_FATURA, "& _ 
                "codMatriz_PS_CLIENTES"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codMatriz_PS_CLIENTES", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "codMatriz_PS_CLIENTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As AtestadoQualificacaoTecnica.SF_SERVICOS_FATURADataTable, ByVal codMatriz_PS_CLIENTES As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (codMatriz_PS_CLIENTES.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(codMatriz_PS_CLIENTES.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal codMatriz_PS_CLIENTES As Global.System.Nullable(Of Integer)) As AtestadoQualificacaoTecnica.SF_SERVICOS_FATURADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (codMatriz_PS_CLIENTES.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(codMatriz_PS_CLIENTES.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As AtestadoQualificacaoTecnica.SF_SERVICOS_FATURADataTable = New AtestadoQualificacaoTecnica.SF_SERVICOS_FATURADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As AtestadoQualificacaoTecnica, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As AtestadoQualificacaoTecnica, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As AtestadoQualificacaoTecnica, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As AtestadoQualificacaoTecnica) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager não contém informações de conexão. Defina cada propriedade Ta"& _ 
                        "bleAdapter de TableAdapterManager como uma instância válida de TableAdapter.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("Não é possível iniciar a transação. Os dados de conexão atuais não oferecem supor"& _ 
                        "te às transações ou o estado atual não permite que a transação inicie.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
